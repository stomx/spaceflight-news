/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './pages/__root'
import { Route as IndexImport } from './pages/index'
import { Route as ReportsIndexImport } from './pages/reports/index'
import { Route as BlogsIndexImport } from './pages/blogs/index'
import { Route as ArticlesIndexImport } from './pages/articles/index'
import { Route as ReportsReportIdImport } from './pages/reports/$reportId'
import { Route as BlogsBlogIdImport } from './pages/blogs/$blogId'
import { Route as ArticlesArticleIdImport } from './pages/articles/$articleId'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ReportsIndexRoute = ReportsIndexImport.update({
  id: '/reports/',
  path: '/reports/',
  getParentRoute: () => rootRoute,
} as any)

const BlogsIndexRoute = BlogsIndexImport.update({
  id: '/blogs/',
  path: '/blogs/',
  getParentRoute: () => rootRoute,
} as any)

const ArticlesIndexRoute = ArticlesIndexImport.update({
  id: '/articles/',
  path: '/articles/',
  getParentRoute: () => rootRoute,
} as any)

const ReportsReportIdRoute = ReportsReportIdImport.update({
  id: '/reports/$reportId',
  path: '/reports/$reportId',
  getParentRoute: () => rootRoute,
} as any)

const BlogsBlogIdRoute = BlogsBlogIdImport.update({
  id: '/blogs/$blogId',
  path: '/blogs/$blogId',
  getParentRoute: () => rootRoute,
} as any)

const ArticlesArticleIdRoute = ArticlesArticleIdImport.update({
  id: '/articles/$articleId',
  path: '/articles/$articleId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/articles/$articleId': {
      id: '/articles/$articleId'
      path: '/articles/$articleId'
      fullPath: '/articles/$articleId'
      preLoaderRoute: typeof ArticlesArticleIdImport
      parentRoute: typeof rootRoute
    }
    '/blogs/$blogId': {
      id: '/blogs/$blogId'
      path: '/blogs/$blogId'
      fullPath: '/blogs/$blogId'
      preLoaderRoute: typeof BlogsBlogIdImport
      parentRoute: typeof rootRoute
    }
    '/reports/$reportId': {
      id: '/reports/$reportId'
      path: '/reports/$reportId'
      fullPath: '/reports/$reportId'
      preLoaderRoute: typeof ReportsReportIdImport
      parentRoute: typeof rootRoute
    }
    '/articles/': {
      id: '/articles/'
      path: '/articles'
      fullPath: '/articles'
      preLoaderRoute: typeof ArticlesIndexImport
      parentRoute: typeof rootRoute
    }
    '/blogs/': {
      id: '/blogs/'
      path: '/blogs'
      fullPath: '/blogs'
      preLoaderRoute: typeof BlogsIndexImport
      parentRoute: typeof rootRoute
    }
    '/reports/': {
      id: '/reports/'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof ReportsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/articles/$articleId': typeof ArticlesArticleIdRoute
  '/blogs/$blogId': typeof BlogsBlogIdRoute
  '/reports/$reportId': typeof ReportsReportIdRoute
  '/articles': typeof ArticlesIndexRoute
  '/blogs': typeof BlogsIndexRoute
  '/reports': typeof ReportsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/articles/$articleId': typeof ArticlesArticleIdRoute
  '/blogs/$blogId': typeof BlogsBlogIdRoute
  '/reports/$reportId': typeof ReportsReportIdRoute
  '/articles': typeof ArticlesIndexRoute
  '/blogs': typeof BlogsIndexRoute
  '/reports': typeof ReportsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/articles/$articleId': typeof ArticlesArticleIdRoute
  '/blogs/$blogId': typeof BlogsBlogIdRoute
  '/reports/$reportId': typeof ReportsReportIdRoute
  '/articles/': typeof ArticlesIndexRoute
  '/blogs/': typeof BlogsIndexRoute
  '/reports/': typeof ReportsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/articles/$articleId'
    | '/blogs/$blogId'
    | '/reports/$reportId'
    | '/articles'
    | '/blogs'
    | '/reports'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/articles/$articleId'
    | '/blogs/$blogId'
    | '/reports/$reportId'
    | '/articles'
    | '/blogs'
    | '/reports'
  id:
    | '__root__'
    | '/'
    | '/articles/$articleId'
    | '/blogs/$blogId'
    | '/reports/$reportId'
    | '/articles/'
    | '/blogs/'
    | '/reports/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ArticlesArticleIdRoute: typeof ArticlesArticleIdRoute
  BlogsBlogIdRoute: typeof BlogsBlogIdRoute
  ReportsReportIdRoute: typeof ReportsReportIdRoute
  ArticlesIndexRoute: typeof ArticlesIndexRoute
  BlogsIndexRoute: typeof BlogsIndexRoute
  ReportsIndexRoute: typeof ReportsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ArticlesArticleIdRoute: ArticlesArticleIdRoute,
  BlogsBlogIdRoute: BlogsBlogIdRoute,
  ReportsReportIdRoute: ReportsReportIdRoute,
  ArticlesIndexRoute: ArticlesIndexRoute,
  BlogsIndexRoute: BlogsIndexRoute,
  ReportsIndexRoute: ReportsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/articles/$articleId",
        "/blogs/$blogId",
        "/reports/$reportId",
        "/articles/",
        "/blogs/",
        "/reports/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/articles/$articleId": {
      "filePath": "articles/$articleId.tsx"
    },
    "/blogs/$blogId": {
      "filePath": "blogs/$blogId.tsx"
    },
    "/reports/$reportId": {
      "filePath": "reports/$reportId.tsx"
    },
    "/articles/": {
      "filePath": "articles/index.tsx"
    },
    "/blogs/": {
      "filePath": "blogs/index.tsx"
    },
    "/reports/": {
      "filePath": "reports/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
